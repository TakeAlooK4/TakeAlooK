package com.bit.tak.model.repository;




import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.transaction.annotation.Transactional;

import com.bit.tak.model.vo.member.User;
import com.bit.tak.model.vo.product.Cart;


public interface CartRepo extends JpaRepository<Cart, Integer> {
	
	
	// 장바구니에 들어온 데이터를 함해서 새로운 테이블로 만들어 준후 cartList.do로 보내 내주는 기능.
//	@Transactional
//	@Modifying
//	@Query(value="update team4.cart set cart_amount=#{cart_amount} where pr_no=#{pr_no}", nativeQuery=true)
//	public void modifyCart(Cart cart);

	@Query(value="select cart_no, c.nickname , pr_name, p.pr_no,pr_cost,cart_amount, ifnull(pr_cost*cart_amount,0) money from team4.cart c, team4.product p, team4.user u where c.nickname=u.nickname and c.pr_no=p.pr_no", nativeQuery=true)
	public List<Cart> listCart(User user);

	@Query(value="select  ifnull(sum(pr_cost*cart_amount),0) money from team4.product p, team4.cart c where p.pr_No=c.pr_No and nickname='sara'",nativeQuery=true)
	 	public int sumMoney(User user);
	
	
//	@Query(value="select cart_no, nickname , pr_no , sum(cart_amount) from team4.cart group by pr_no order by cart_no,nickname;", nativeQuery=true )
//	public List<Cart> findByCartList(List<Cart> cartList);
	
//	@Transactional
//	@Modifying
//	@Query(value="delete from team4.cart where cart_no=#{cart_no}", nativeQuery=true)
//	public List<Cart> delete(int cartNo);
	
	
//	@Transactional
//	@Modifying
//	@Query(value="insert into cart(nickname,pr_No,sum(cart_Amount)) value(?,?,?)", nativeQuery=true )
//	public int save( @Param("nickname") String nickname, @Param("pr_No") String prNo, @Param("cart_Amount") int cartAmount);

	
	
	
	
}
