<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head  static/ *** /*** >
<meta charset="UTF-8">
<script src="http://code.jquery.com/jquery-Latest.js"></script>
<!-- include libraries(jQuery, bootstrap) -->
<link href="http://netdna.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.css" rel="stylesheet">
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
 <link rel="stylesheet" href="/resources/demos/style.css">
<script src="http://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.js"></script> 
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script src="http://netdna.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.js"></script> 
<!-- 섬머노트 -->
<link href="http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.12/summernote.css" rel="stylesheet">
<script src="http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.12/summernote.js"></script>
<!-- 지도 -->
<script type="text/javascript"
	src="//dapi.kakao.com/v2/maps/sdk.js?appkey=33edc2633093443204ec1c390965f7c5&libraries=services,clusterer,drawing"></script>

<!-- 타임피커 -->
<script type="text/javascript" src="js/jquery.timepicker.js"></script>
<link rel="stylesheet" href="css/jquery.timepicker.css">

<style type="text/css">
 .fileDrop{
    
 	width: 300px;
 	height: 150px;
 	border: 1px dotted blue;
 }
</style>
<script type="text/javascript">
//날짜
$( function() {
    var dateFormat = "mm/dd/yy",
      from = $( "#from" )
        .datepicker({
          defaultDate: "+1w",
          changeMonth: true,
          numberOfMonths: 3
        })
        .on( "change", function() {
          to.datepicker( "option", "minDate", getDate( this ) );
        }),
      to = $( "#to" ).datepicker({
        defaultDate: "+1w",
        changeMonth: true,
        numberOfMonths: 3
      })
      .on( "change", function() {
        from.datepicker( "option", "maxDate", getDate( this ) );
      });
 
    function getDate( element ) {
      var date;
      try {
        date = $.datepicker.parseDate( dateFormat, element.value );
      } catch( error ) {
        date = null;
      }
 
      return date;
    }
  } );
  
//두번째 날짜 힝
//날짜
$( function() {
    var dateFormat = "mm/dd/yy",
      from = $( "#startDay" )
        .datepicker({
          defaultDate: "+1w",
          changeMonth: true,
          numberOfMonths: 3
        })
        .on( "change", function() {
          to.datepicker( "option", "minDate", getDate( this ) );
        }),
      to = $( "#endDay" ).datepicker({
        defaultDate: "+1w",
        changeMonth: true,
        numberOfMonths: 3
      })
      .on( "change", function() {
        from.datepicker( "option", "maxDate", getDate( this ) );
      });
 
    function getDate( element ) {
      var date;
      try {
        date = $.datepicker.parseDate( dateFormat, element.value );
      } catch( error ) {
        date = null;
      }
 
      return date;
    }
  } );
function fn_timePicker(obj) {
	var id = $(obj).attr("id");
	$("#" + id).timepicker({
		timeFormat : "HH:mm",
		interval : 30,
		dynamic : false,
		dropdown : true,
		scrollbar : true
	});
	$("#" + id).timepicker("open");
}

  //지도
$(document).ready(function() {
    $('#summernote').summernote({
    		width:1000,
            height: 300,                 // set editor height
            minHeight: 300,             // set minimum height of editor
            maxHeight: 300,             // set maximum height of editor
            focus: false,	                 // set focus to editable area after initializing summernote
            toolbar: [
			    ['style', ['bold', 'italic', 'underline', 'clear']],
			    ['fontname',['fontname']],
			    ['font', ['strikethrough', 'superscript', 'subscript']],
			    ['fontsize', ['fontsize']],
			    ['color', ['color']],
			    ['para', ['ul', 'ol', 'paragraph']],
			    ['insert', ['link', 'picture', 'video']],
			    ['view', ['help']]
			  ],
			  lang : 'ko-KR',
			  callbacks: {
					onImageUpload: function(files, editor, welEditable) {
			            for (var i = files.length - 1; i >= 0; i--) {
			            	sendFile(files[i], this);
			            }
			        }
				}
    });
   
    
    
    function sendFile(file, el) {
		var form_data = new FormData();
      	form_data.append('file', file);
      	$.ajax({
        	data: form_data,
        	type: "POST",
        	url: '/community/image',
        	cache: false,
        	contentType: false,
        	enctype: 'multipart/form-data',
        	processData: false,
        	success: function(img_name) {
        		alert(img_name)
          		$(el).summernote('editor.insertImage', img_name);
        	}
      	});
    }
    
});

//드래그앤 드롭
$(document).ready(function(){
	//드래그앤드롭 작동
	$(".fileDrop").on("dragenter dragover", function(event){
		//기본효과를 막음 - a tag 이동막음
		event.preventDefault();
		$(".fileDrop").css('background-color','#FFFFFF');
	
	});
	
	$(".fileDrop").on("drop", function(event){
		event.preventDefault();
		
		 $(".fileDrop").css('border','#FFFFFF');
		$(".fileDrop").css('background-color','#E3F2FC');
		
		//드래그된 파일의 정보
		var files = event.originalEvent.dataTransfer.files;
		//첫번째 파일
		var file = files[0];
		//콘솔에서 파일정보 확인
		console.log("콘솔");
		console.log(file);

		//이미지파일만 받기
		var fileN = file.name;	
		var ext = fileN.slice(fileN.lastIndexOf(".") + 1).toLowerCase(); 
		  
		if (!(ext == "jpg" || ext == "png")) { 
		    alert("이미지파일 (.jpg, .png ) 만 업로드 가능합니다."); 
		    return false; 
		    
		}
	
	
		//ajax로 전달한 폼 객체
		var formData = new FormData();
		
		//폼 객체에 파일추가 append("변수명",값)
		formData.append("file",file); 

	 //$("#dd *").prop("disabled", true);
		
		 $.ajax({
			url: '/upload/uploadAjax',
			data: formData,
			dataType:'text',
			processData:false,
			contentType:false,
			type: 'POST',
			
			/*
			//시큐security를 적용했을때 ajax를쓰면 에러난당403
			beforeSend : function(xhr)
             {  
                 xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
                 
             },  
            */
			success: function(data){
				alert("썸네일명 : "+data);
				var str = "";
				//str = "<div><input type='text' hidden='true' name='petImg' value="+getImageLink(data)+">";
				//$(".uploadedList").append(str);
				
				//이미지 파일이면 썸네일 이미지 출력
				 if(checkImageType(data)){
					/* alert(getImageLink(data)); */
					$(".uploadedList").empty();
					str = "<div><input type='text' hidden='true' name='hostImg' value="+getImageLink(data)+">";
					str += "<a href='/upload/displayFile?fileName="+getImageLink(data)+"'>";
					str += "<img src='/upload/displayFile?fileName="+data+"'></a>";
					$(".fileDrop").css('background-color','#FFFFFF');
					//$("#dd").attr("disabled", true);
					//$("#dd").unbind("mouseenter mouseleave" );
				
				}
				str += "<span data-src="+data+"  name='petImg' >[삭제]</span></div>";
			 	$(".uploadedList").append(str); 
				//리스
					 	
			}      
		}); 
		//alert("ddddddddddddddddd");
		//$("#dd *").attr('disabled', true);
		//$("#dd").find("div").prop("disabled", true);
		//$("#dd").unbind("mouseenter mouseleave" );
		
	});
	$(".uploadedList").on("click","span",function(event){
		alert("이미지 삭제")
		//this : 클릭한 <span>
		var that = $(this);
		$.ajax({
			url:"/upload/deleteFile",
			type: "post",
			//json방식
			data: {fileName:$(this).attr("data-src")},
			dataType: "text",
			success: function(result){
				//클릭한 span태그가 속한 div를 제거
				that.parent("div").remove();
			}
		});
	});
});
//원본파일이름을 목록에 출력하기위해
function getOriginalName(fileName){
	//이미지파일
	
	if(checkImageType(fileName)){
		return;
		
	}
	//uuid를 제외한 원라파일 이름을 리턴
	var idx = fileName.indexOf("-")+1;
	
	return fileName.substr(idx);
}
//이미지파일 링크 - 클릭하면 원본 이미지를 출력해주기 위해
function getImageLink(fileName){
	//이미지파일이 아니면
	if(!checkImageType(fileName)){
		return;
		
	}
	//이미지파일이면(썸네일이 아닌 원본이미지를 가져오기 위해)
	//년월일 경로 추출
	var front = fileName.substr(0,12);
	//년월일 경로와 s_를 제거한 원본 파일명을 추출
	var end = fileName.substr(14);
	console.log(front);
	console.log(end);
	console.log("DB저장명 :"+front+end);
	return front+end;
}

function checkImageType(fileName){
	var pattern = /jpg|gif|png|jpeg/i;
	return fileName.match(pattern);
}
</script>
<script type="text/javascript">
$(document).ready(function(){
	$("input:checkbox[id=plusDay]").click(function(){
		if($("#plusDay").is(":checked")){
			
			$(".plusDayEnd").show();
		}else{
			$(".plusDayEnd").hide();
		}
		
		
	})
	
});

</script>
<title>모임 작성</title>
</head>

<body>
<header>

<h3>모임</h3>

</header> 
	<div>
		<form action="/hostInsert" method="post">
			<table style="width: 1000px;height: 300px;" border="1">
			<tr valign="top">
				<td align="left" >
					<table  style="width:400px;height: 300px;" border="1">
						<tr >
							<th><label>사진</label></th>
							<td>
							<div class="fileDrop"><div class="uploadedList"></div></div>
							
							</td>
						</tr>
						<tr>
							<th><label for="title">제목   </label></th>
							<td><input id="title" name="hostTitle"></td>
						</tr>
					</table>	
				</td>
				<td align="right">
					<table border="1" style="width:600px;height: 300px;">
						<tr>
							<th><label>신청기간</label></th>
							<td>
								<label for="from">모집날짜</label>
								<input type="text" id="from" name="hostRecruit">
								<span> ~ </span>
								<label for="to">마감날짜</label>
								<input type="text" id="to" name="hostDeadline"><br>
								<span>*시간은 모집시작일 오전10시부터 마감일 오후 18시까지 입니다.</span>
								
							</td>
						</tr>
						
						<tr>
							<th>
								<label>모임일시  </label>
							</th>
							<td>
								<label>출발</label>
								<input type="text" id="startDay" name="hostStartdate">
								<input id="timePicker1" name="hostStartdate" onclick="javascript:fn_timePicker(this);" />

								<div class="plusDayEnd" hidden="true">
								<p> ~ </p>
								<label for="to">도착</label>
								<input type="text" id="endDay" name="hostArrivaldate">
								<input id="timePicker2" name="hostArrivaltime" onclick="javascript:fn_timePicker(this);" />
								</div>
								<br>
								<input type="checkbox" value="하루이상" id="plusDay">
								<label>하루이상</label>
							</td>					
							
						</tr>
					
						<tr>
							<th><label>참여인원   </label></th>
							<td><input type="number" min="1" max="20" required="required" name="hostTotalparticipant"><br>
							<span style="color: red;">*인원수는 최대 20명입니다.</span>
							</td>
							
						</tr>
					</table>
				</td>
			</tr>
			</table>
			<br>
			
			
			<label>모임장소   </label>
			<input type="text" id="address" value="주소를 입력해 주세요">
			<button type="button" id="start" >검색</button><br>
			<div id="map" style="width: 1000px; height: 350px;"></div>
			
			<label for="hostContents">내용:</label>
			<textarea th:name="hostContents" id="summernote"></textarea>
			
			<input type="submit" value="모임등록">
			<br>
		</form>
	</div>
<script>
	var mapContainer = document.getElementById('map'), // 지도를 표시할 div 
	mapOption = {
		center : new kakao.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표
		level : 3
	// 지도의 확대 레벨
	};

	//지도를 생성합니다    
	var map = new kakao.maps.Map(mapContainer, mapOption);

	//주소-좌표 변환 객체를 생성합니다
	var geocoder = new kakao.maps.services.Geocoder();
	
	
	
	$("button[id=start]").click(function(){
	var address = $("#address").val();
	alert(address);
	//주소로 좌표를 검색합니다
	geocoder
			.addressSearch(
					address,
					function(result, status) {

						// 정상적으로 검색이 완료됐으면 
						if (status === kakao.maps.services.Status.OK) {

							var coords = new kakao.maps.LatLng(result[0].y,
									result[0].x);

							// 결과값으로 받은 위치를 마커로 표시합니다
							var marker = new kakao.maps.Marker({
								map : map,
								position : coords
							});

							// 인포윈도우로 장소에 대한 설명을 표시합니다
							var infowindow = new kakao.maps.InfoWindow(
									{
										content : '<div style="width:150px;text-align:center;padding:6px 0;">'+address+'</div>'+
										"<input type='text' value='"+ address+"' name='hostPlace'>"
									});
							infowindow.open(map, marker);

							// 지도의 중심을 결과값으로 받은 위치로 이동시킵니다
							map.setCenter(coords);
						}
					});
	})
</script>
</body>
</html>