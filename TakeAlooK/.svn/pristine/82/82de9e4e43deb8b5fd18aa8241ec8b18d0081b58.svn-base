package com.bit.tak.controller;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.SessionAttributes;
import org.springframework.web.bind.support.SessionStatus;

import com.bit.tak.model.repository.MemberRepo;
import com.bit.tak.model.security.UserSha256;
import com.bit.tak.model.service.MemberService;
import com.bit.tak.model.vo.member.Muser;

@SessionAttributes("muser")
@Controller
public class UserMemberController {
	
	
	@Autowired
	MemberRepo memberRepository;
	
	@Autowired
	MemberService memberService;

	
	// 유저 회원 로그인(뷰)
	@RequestMapping("/memberLogin")
	public String memberLogin() {
		return "member/memberLogin";
	}
//	@RequestMapping("/login")
//	public String login() {
//		return "member/memberLogin";
//	}
	
	
	// 일반 유저 로그인 시 보내지는 곳
	@PostMapping("/memberLogin.Do")
	public String memberLoginDo(Muser mUser, Model model, @RequestParam("id")String id, @RequestParam("password")String password, HttpSession session) {
		
		
		Muser findUser = memberRepository.findByUser(mUser.getId(), UserSha256.encrypt(mUser.getPassword()));
	
		//System.out.println("1     :   " + findUser.getId());
			
//		String userPw = mUser.getPassword();
//		mUser.setPassword(UserSha256.encrypt(userPw));

//		System.out.println("mUser.getPassword()    :   " + mUser.getPassword());
		if(findUser != null) {
			model.addAttribute("muser", findUser);

			
			//session
			//session.setAttribute("muser",findUser);
			return "redirect:/";
		} else {
			
			model.addAttribute("msg" , "아이디와 비밀번호가 맞지 않습니다.");
			return "member/memberLogin";
		}
		
	}
	
	// 로그아웃 시키는 메소드
	@RequestMapping("/userLogOut")
	public String logOut(SessionStatus status) {
		status.setComplete();
		return "redirect:/";
	}
	
	// 일반 유저 회원가입(뷰)
	@RequestMapping("/memberSignUp")
	public String memberSignUp() {
		return "member/memberSignUp";
	}
	
	// 일반유저 회원가입 시 보내지는 곳
	@RequestMapping("/memberSignUp.do")
	public String memberSignUpDo(Muser mUser) {
		
		// 암호 확인
		System.out.println("첫번째 : " + mUser.getPassword());
		
		// 비밀번호 암호화 (sha256)
		String encryPassword = UserSha256.encrypt(mUser.getPassword());
		mUser.setPassword(encryPassword);
		System.out.println("두번째 : " + mUser.getPassword());
		
		// 회원가입 메소드
		memberService.memberSignUp(mUser);
		
		return "redirect:memberLogin";
	}
	
	
	
}
